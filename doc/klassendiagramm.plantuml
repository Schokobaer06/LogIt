@startuml UML Diagramme
' Backend-Klassen
package "LogIt.Core" {
    class Programm {
        - programName: string
        - processId: int
        - startTime: DateTime
        - totalRunTime: TimeSpan
        - currentRunTime: TimeSpan
        + Start(): void
        + Stop(): void
        + UpdateRunTime(): void
        + GetTotalRunTime(): TimeSpan
        + GetCurrentRunTime(): TimeSpan
    }
    

    class BackendUser {
        - role: string
        +Authenticate(): bool
    }
        

    interface ILogs {
        + Log(): void
    }
    
    class DataFetcher {
        + fetch(): Programm
    }

    Programm ..|> ILogs
    DataFetcher --> Programm
    BackendUser --> DataFetcher
}

' Frontend-Klassen
package "LogIt.UI" {
    class MainWindow {
        - timer: Timer
        + ShowActivePrograms(): void
    }

    class SettingsWindow {
        + SaveSettings(): void
        + LoadSettings(): void
    }

    class Setup{
        + AuthenticateUser(): void
    }
        class FrontEndUser {
        - role: string
        + Authenticate(): bool
    }

    class FrontendData {
        + Data(): List<Programm>
    }

    Setup --> FrontEndUser
    FrontendData --> FrontEndUser
    ' FrontendData --> Setup
    MainWindow --> FrontendData
    SettingsWindow --> FrontendData
}

' REST-API
package "LogIt.REST-API" {
        class DatabaseManager {
        + SaveLog(log: Programm): void
        + LoadLogs(): List<Programm>
        + Connect(): void
        + Disconnect(): void
    }
        class SaveToDatabase {
        + save(Programm): void
    }
        class GetFromDatabase {
            + DatabaseManager.LoadLogs(): List<Programm>
        }



    FrontEndUser --> GetFromDatabase
    BackendUser --> SaveToDatabase

    SaveToDatabase --> DatabaseManager
    GetFromDatabase --> DatabaseManager
    
}
@enduml