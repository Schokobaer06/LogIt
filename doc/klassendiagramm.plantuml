@startuml LogIt Klassen

' === BACKEND inkl. REST-API ===
package "LogIt.Core (Backend + REST API)" {

    class User {
        +UserId: int
        +Role: UserRole
    }

    class LogEntry {
        +LogEntryId: int
        +ProgramName: string
        +FirstSeen: DateTime
        +UserId: int
        +User: User
        +Sessions: List<Session>
    }

    class Session {
        +SessionId: int
        +StartTime: DateTime
        +EndTime: DateTime?
        +Duration: TimeSpan
        +SessionNumber: int
        +LogEntryId: int
    }

    LogEntry "1" -- "n" Session : Sessions
    LogEntry "n" -- "1" User : User

    ' API-Controller (vereinfachte Darstellung)
    class LogEntriesController
    class SessionsController

    LogEntriesController ..> LogEntry
    SessionsController ..> Session
}

' === FRONTEND ===
package "LogIt.UI (Frontend)" {

    class ObservableObject {
        #RaisePropertyChanged(propertyName: string): void
    }

    class MainWindowViewModel {
        +Entries: ObservableCollection<LogEntryDisplay>
        +Series: ISeries[]
        +Labels: string[]
        +YFormatter: Func<double, string>
        +XAxes: Axis[]
        +YAxes: Axis[]
        +AppVersion: string
        +paint: Paint
        +PlayChartAnimationOnNextRefresh(): void
        +RefreshAsync(): Task
    }

    class LogEntryDisplay {
        +ProgramName: string
        +IsActive: bool
        +SortKey: DateTime
        +LastUsedDisplay: string
        +TotalRunTimeDisplay: string
        +CurrentRunTimeDisplay: string
    }

    class ApiService {
        +GetAllLogEntriesAsync(): Task<List<LogEntry>>
    }

    MainWindowViewModel --|> ObservableObject
    MainWindowViewModel --> LogEntryDisplay
    MainWindowViewModel --> ApiService
    LogEntryDisplay --> LogEntry

}

@enduml